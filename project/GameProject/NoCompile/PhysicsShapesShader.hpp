#ifndef PHYSICS_SHAPE_SHADER_HPP
#define PHYSICS_SHAPE_SHADER_HPP

const char* PhysShapeVertexShader = ""
"#version410\n"
"\n"
"layout(location = 0) in vec3 a_center;\n"
"void main() {\n"
"\n"
"	gl_Position = vec4(a_center, 1.0);\n"
"}\n"
;

const char* PhysShapeSphereGeoShader = ""
"#version 410\n"
"\n"
"layout(points) in;\n"
"layout(triangle_strip, max_vertices = 3) out;\n"
"\n"
"uniform vec3 center;\n"
"uniform vec4 shapeData1;\n"
"uniform vec4 shapeData2;\n"
"\n"
"void main() {\n"
"\n"
"	const vec2 tf = vec2(1.0, 0.0);"
"	gl_Position = center.xyzz * tf.xxxy;\n"
"	EmitVertex();\n"
"\n"
"	gl_Position = center.xyzz * tf.xxxy;\n"
"	EmitVertex();\n"
"\n"
"	gl_Position = center.xyzz * tf.xxxy;\n"
"	EmitVertex();\n"
"\n"
"	EndPrimitive();\n"
"\n"
"}\n";

const char* PhysShapeAABBGeoShader = ""
"#version 410\n"
"\n"
"layout(points) in;\n"
"layout(triangle_strip, max_vertices = 3) out;\n"
"\n"
"uniform vec3 center;\n"
"uniform vec4 shapeData1;\n"
"uniform vec4 shapeData2;\n"
"\n"
"void main() {\n"
"\n"
"	const vec2 tf = vec2(1.0, 0.0);"
"	gl_Position = center.xyzz * tf.xxxy;\n"
"	EmitVertex();\n"
"\n"
"	gl_Position = center.xyzz * tf.xxxy;\n"
"	EmitVertex();\n"
"\n"
"	gl_Position = center.xyzz * tf.xxxy;\n"
"	EmitVertex();\n"
"\n"
"	EndPrimitive();\n"
"\n"
"}\n";

const char* PhysShapeOOBBGeoShader = ""
"#version 410\n"
"\n"
"layout(points) in;\n"
"layout(triangle_strip, max_vertices = 3) out;\n"
"\n"
"uniform vec3 center;\n"
"uniform vec4 shapeData1;\n"
"uniform vec4 shapeData2;\n"
"\n"
"void main() {\n"
"\n"
"	const vec2 tf = vec2(1.0, 0.0);"
"	gl_Position = center.xyzz * tf.xxxy;\n"
"	EmitVertex();\n"
"\n"
"	gl_Position = center.xyzz * tf.xxxy;\n"
"	EmitVertex();\n"
"\n"
"	gl_Position = center.xyzz * tf.xxxy;\n"
"	EmitVertex();\n"
"\n"
"	EndPrimitive();\n"
"\n"
"}\n";

const char* PhysShapeFragmentShader = ""
"#version 410\n"
"\n"
"uniform vec4 shapeData3;\n"
"void main() {\n"
"	fragmentColor = shapeData3;\n"
"}\n"
"\n";

#endif