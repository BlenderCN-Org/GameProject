const char* defaultTextVertexShaderCode = ""

"#version 410\n"
"\n"
"layout(location = 0) in vec3 vertexPos;\n"
"layout(location = 1) in vec2 vertexUv;\n"
"\n"
"layout(location = 0) out vec2 fragUv;\n"
"\n"
"uniform mat4 viewProjMatrix;\n"
"uniform mat4 worldMat;\n"
"\n"
"void main() {\n"
"	fragUv = vertexUv;\n"
"	gl_Position = viewProjMatrix * vec4((vec4(vertexPos, 1.0) * worldMat).xyz, 1.0);\n"
"}\n"
"\n";

const char* defaultTextGeomentryShaderCode = ""

"#version 410\n"
"\n"
"layout(triangles) in;\n"
"layout(triangle_strip, max_vertices = 3) out;\n"
"\n"
"layout(location = 0) in vec2 fragUv[];\n"
"\n"
"layout(location = 0) out vec2 UV;\n"
"\n"
"void main() {\n"
"\n"
"	UV = fragUv[0];\n"
"	gl_Position = gl_in[0].gl_Position;\n"
"	EmitVertex();\n"
"\n"
"	UV = fragUv[1];\n"
"	gl_Position = gl_in[1].gl_Position;\n"
"	EmitVertex();\n"
"\n"
"	UV = fragUv[2];\n"
"	gl_Position = gl_in[2].gl_Position;\n"
"	EmitVertex();\n"
"	EndPrimitive();\n"
"\n"
"}\n";

const char* defaultTextFragmentShaderCode = ""
"#version 410\n"
"\n"
"layout(location = 0) in vec2 TexCoords;\n"
"layout(location = 0) out vec4 fragmentCoor;\n"
"\n"
"layout(location = 0) out vec4 fragmentColor;\n"
"layout(location = 1) out vec4 red;\n"
"\n"
"uniform sampler2D text;\n"
"uniform vec3 textColor;\n"
"\n"
"void main() {\n"
"vec4 sampled = vec4(1.0, 1.0, 1.0, texture(text, TexCoords).r);\n"
"fragmentColor = vec4(textColor, 1.0) * sampled;\n"
"red = vec4(1.0);\n"
"}\n"
"\n";